
#' Get rutgers map
#'
#' @description Get rutgers map
#'
#' @param file_path the location of the rutgers map
#'
#' @return the rutgers map into a data table structure
#' @import data.table
#' @export
#'
get_rutgers_map <- function(file_path){
  chr_rutgers_map = suppressMessages(fread(file_path))
  # filter on the desired columns : Sex_averaged_start_map_position, Build37_start_physical_positio, Marker_name and the chromosome code
  return(data.frame(rsid = chr_rutgers_map$Marker_name,
                    position = chr_rutgers_map$Build37_start_physical_position,
                    cM = chr_rutgers_map$Sex_averaged_start_map_position))
}



#' get rutgers map in genMap format [bp,cM]
#'
#' @param genetic_map_path the location of the rutgers map
#' @param chr chromosome code
#' @return genetic_map : the genetetic mapin genMap format
#'
#' @import data.table
#'
#' @export
get_rutgers_genMap_SexAverage <- function(genetic_map_path, chr){
  ru_map=(suppressMessages(fread(sprintf('%s/RUMapv3_B137_chr%s.txt', genetic_map_path, chr))))
  return(data.frame(bp=ru_map$Build37_start_physical_position,
                    cM=ru_map$Sex_averaged_start_map_position))
}



#' Get 1000 genome interpolated map
#'
#' @description Get 1000 genome interpolated map
#'
#' @param file_path the location of the 1000 genome interpolated map
#'
#' @return the 1000 genome interpolated map into a data table structure
#' @import data.table
#' @export
#'
get_1000_genome_interpolated_map <- function(file_path){
  chr_1000_genome_interpolated_map = suppressMessages(fread(file_path))
  chr_1000_genome_interpolated_map_filtred = data.frame(rsid = chr_1000_genome_interpolated_map[, 1],
                                                        position = chr_1000_genome_interpolated_map[, 2],
                                                        cM = chr_1000_genome_interpolated_map[, 3])
  colnames(chr_1000_genome_interpolated_map_filtred) = c('rsid', 'position', 'cM')
  return(chr_1000_genome_interpolated_map_filtred)
}


#' Get 1000 genome map
#'
#' @description Get 1000 genome map
#'
#' @param file_path the location of the 1000 genome map
#'
#' @return the 1000 genome map into a data table structure
#' @import data.table
#' @export
#'
get_1000_genome_map <- function(file_path){
  chr_1000_genome_map = suppressMessages(fread(file_path))

  # replacing the () and / characters by _ in the columns name
  colnames(get_1000_genome_map) = c('position', 'COMBINED_rate_cM_Mb', 'Genetic_Map_cM')

  return(data.frame(position = chr_1000_genome_map$position,
                    cM = chr_1000_genome_map$Genetic_Map_cM))
}


